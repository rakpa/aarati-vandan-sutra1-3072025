workflows:
  ios-workflow:
    name: iOS Build
    environment:
      xcode: latest
      node: latest
      cocoapods: default
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
    scripts:
      - name: Install dependencies
        script: |
          # Use npm ci for faster, reliable installs in CI
          npm ci
          # Install Capacitor CLI globally to ensure it's available
          npm install -g @capacitor/cli
      
      - name: Verify installations
        script: |
          # Verify Node and npm versions
          node --version
          npm --version
          # Verify Capacitor CLI is available
          npx cap --version
          # List installed packages to debug dependency issues
          npm list --depth=0
      
      - name: Build React app
        script: |
          # Build the React application
          npm run build
          # Verify build output exists
          ls -la build/ || ls -la dist/
      
      - name: Initialize and Sync Capacitor
        script: |
          # Check if Capacitor is initialized, if not initialize it
          if [ ! -f "capacitor.config.json" ] && [ ! -f "capacitor.config.ts" ]; then
            echo "Initializing Capacitor..."
            npx cap init "aarati-vandan-sutra1-3072025" "com.aarati.vandansutra" --web-dir=build
          fi
          
          # Ensure iOS platform is installed
          npm install @capacitor/ios
          
          # Add iOS platform (this will create the ios folder structure)
          npx cap add ios
          
          # Copy web assets and sync
          npx cap copy ios
          npx cap sync ios
          
          # Copy required config files to iOS app directory
          if [ -f "capacitor.config.json" ]; then
            cp capacitor.config.json ios/App/App/
          fi
          
          # Create config.xml if it doesn't exist (required by iOS build)
          if [ ! -f "ios/App/App/config.xml" ]; then
            cat > ios/App/App/config.xml << 'EOF'
<?xml version='1.0' encoding='utf-8'?>
<widget version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">
  <name>aarati-vandan-sutra1-3072025</name>
  <description>An awesome Ionic/Capacitor app.</description>
  <author email="hi@ionicframework.com" href="http://ionicframework.com/">Ionic Framework Team</author>
  <content src="index.html" />
  <access origin="*" />
  <allow-intent href="http://*/*" />
  <allow-intent href="https://*/*" />
  <allow-intent href="tel:*" />
  <allow-intent href="sms:*" />
  <allow-intent href="mailto:*" />
  <allow-intent href="geo:*" />
  <preference name="ScrollEnabled" value="false" />
  <preference name="BackupWebStorage" value="none" />
  <preference name="SplashMaintainAspectRatio" value="true" />
  <preference name="FadeSplashScreenDuration" value="300" />
  <preference name="SplashShowOnlyFirstTime" value="false" />
  <preference name="SplashScreen" value="screen" />
  <preference name="SplashScreenDelay" value="3000" />
  <platform name="ios">
    <allow-intent href="itms:*" />
    <allow-intent href="itms-apps:*" />
  </platform>
</widget>
EOF
          fi
          
          # Ensure public folder exists in iOS app directory
          if [ -d "public" ]; then
            cp -r public ios/App/App/
          else
            mkdir -p ios/App/App/public
          fi
          
          # Verify iOS project structure was created
          ls -la ios/App/ || (echo "iOS platform creation failed" && exit 1)
          echo "Checking required files..."
          ls -la ios/App/App/capacitor.config.json || echo "Warning: capacitor.config.json not found"
          ls -la ios/App/App/config.xml || echo "Warning: config.xml not found"
      
      - name: Install CocoaPods dependencies
        script: |
          cd ios/App
          pod install
      
      - name: Build iOS app
        script: |
          cd ios/App
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            archive \
            -archivePath $CM_BUILD_DIR/ios_archive/App.xcarchive \
            CODE_SIGNING_ALLOWED=NO
    
    artifacts:
      - $CM_BUILD_DIR/ios_archive/*.xcarchive
      - build/ios/ipa/*.ipa
      - ios/App/build/Build/Products/Release-iphoneos/*.app
