workflows:
  ios-workflow:
    name: iOS Build
    environment:
      xcode: latest
      node: latest
      cocoapods: default
    cache:
      cache_paths:
        - $HOME/.npm
        - node_modules
    scripts:
      - name: Install dependencies
        script: |
          # Use npm ci for faster, reliable installs in CI
          npm ci
          # Install Capacitor CLI globally to ensure it's available
          npm install -g @capacitor/cli
      
      - name: Verify installations
        script: |
          # Verify Node and npm versions
          node --version
          npm --version
          # Verify Capacitor CLI is available
          npx cap --version
          # List installed packages to debug dependency issues
          npm list --depth=0
      
      - name: Build React app
        script: |
          # Build the React application
          npm run build
          # Verify build output exists
          ls -la build/ || ls -la dist/
      
      - name: Initialize and Setup Capacitor
        script: |
          # Check if Capacitor is initialized, if not initialize it
          if [ ! -f "capacitor.config.json" ] && [ ! -f "capacitor.config.ts" ]; then
            echo "Initializing Capacitor..."
            npx cap init "aarati-vandan-sutra1-3072025" "com.aarati.vandansutra" --web-dir=build
          fi
          
          # Verify capacitor.config.json exists in root
          if [ ! -f "capacitor.config.json" ]; then
            echo "Creating capacitor.config.json..."
            cat > capacitor.config.json << EOF
          {
            "appId": "com.aarati.vandansutra",
            "appName": "aarati-vandan-sutra1-3072025",
            "webDir": "build",
            "server": {
              "androidScheme": "https"
            }
          }
          EOF
          fi
          
          # Create a minimal config.xml for compatibility
          if [ ! -f "config.xml" ]; then
            echo "Creating config.xml..."
            cat > config.xml << EOF
          <?xml version='1.0' encoding='utf-8'?>
          <widget id="com.aarati.vandansutra" version="1.0.0" xmlns="http://www.w3.org/ns/widgets" xmlns:cdv="http://cordova.apache.org/ns/1.0">
              <name>aarati-vandan-sutra1-3072025</name>
              <description>Aarati Vandan Sutra App</description>
              <author email="dev@example.com" href="http://example.com">Developer</author>
              <content src="index.html" />
              <access origin="*" />
              <platform name="ios">
                  <preference name="WKWebViewOnly" value="true" />
                  <preference name="CordovaWebViewEngine" value="CDVWKWebViewEngine" />
              </platform>
          </widget>
          EOF
          fi
          
          # Ensure iOS platform is installed
          npm install @capacitor/ios
      
      - name: Add and Sync iOS Platform
        script: |
          # Remove existing iOS platform if it exists to ensure clean setup
          npx cap remove ios || true
          
          # Add iOS platform (this will create the ios folder structure)
          npx cap add ios
          
          # Copy the config files to the iOS app directory
          cp capacitor.config.json ios/App/App/
          cp config.xml ios/App/App/
          
          # Create public directory if it doesn't exist and copy to iOS
          mkdir -p public
          if [ -d "build" ]; then
            cp -r build/* public/ 2>/dev/null || true
          fi
          cp -r public ios/App/App/ || mkdir -p ios/App/App/public
          
          # Copy web assets and sync
          npx cap copy ios
          npx cap sync ios
          
          # Verify iOS project structure was created
          ls -la ios/App/ || (echo "iOS platform creation failed" && exit 1)
          
          # Verify required files exist in iOS app
          echo "Checking required files in iOS project..."
          ls -la ios/App/App/capacitor.config.json || echo "Warning: capacitor.config.json missing"
          ls -la ios/App/App/config.xml || echo "Warning: config.xml missing"
          ls -la ios/App/App/public || echo "Warning: public folder missing"
      
      - name: Install CocoaPods dependencies
        script: |
          cd ios/App
          pod install --repo-update
      
      - name: Build iOS app
        script: |
          cd ios/App
          # Clean build directory first
          xcodebuild clean -workspace App.xcworkspace -scheme App
          
          # Build the archive
          xcodebuild -workspace App.xcworkspace \
            -scheme App \
            -sdk iphoneos \
            -configuration Release \
            archive \
            -archivePath $CM_BUILD_DIR/ios_archive/App.xcarchive \
            CODE_SIGNING_ALLOWED=NO \
            DEVELOPMENT_TEAM="" \
            CODE_SIGNING_IDENTITY="" \
            CODE_SIGN_ENTITLEMENTS="" \
            PROVISIONING_PROFILE_SPECIFIER=""
    
    artifacts:
      - $CM_BUILD_DIR/ios_archive/*.xcarchive
      - build/ios/ipa/*.ipa
      - ios/App/build/Build/Products/Release-iphoneos/*.app
